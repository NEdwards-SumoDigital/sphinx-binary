diff -urN dist.orig/sphinx/builders/applehelp.py dist/sphinx/builders/applehelp.py
--- dist.orig/sphinx/builders/applehelp.py	2018-11-11 14:47:20.000000000 +0900
+++ dist/sphinx/builders/applehelp.py	2018-11-24 09:37:58.181510454 +0900
@@ -11,6 +11,7 @@
 from __future__ import print_function
 
 import codecs
+import os
 import pipes
 import plistlib
 import shlex
@@ -231,7 +232,8 @@
             try:
                 p = subprocess.Popen(args,
                                      stdout=subprocess.PIPE,
-                                     stderr=subprocess.STDOUT)
+                                     stderr=subprocess.STDOUT,
+                                     env=_new_env())
 
                 output = p.communicate()[0]
 
@@ -264,7 +266,8 @@
                 try:
                     p = subprocess.Popen(args,
                                          stdout=subprocess.PIPE,
-                                         stderr=subprocess.STDOUT)
+                                         stderr=subprocess.STDOUT,
+                                         env=_new_env())
 
                     output = p.communicate()[0]
 
@@ -276,6 +279,17 @@
                     raise AppleHelpCodeSigningFailed(__('Command not found: %s') % args[0])
 
 
+def _new_env():
+    env = dict(os.environ)  # make a copy of the environment
+    lp_key = 'LD_LIBRARY_PATH'  # for Linux and *BSD.
+    lp_orig = env.get(lp_key + '_ORIG')  # pyinstaller >= 20160820 has this
+    if lp_orig is not None:
+        env[lp_key] = lp_orig  # restore the original, unmodified value
+    else:
+        env.pop(lp_key, None)  # last resort: remove the env var
+    return env
+
+
 def setup(app):
     # type: (Sphinx) -> Dict[unicode, Any]
     app.setup_extension('sphinx.builders.html')
diff -urN dist.orig/sphinx/ext/graphviz.py dist/sphinx/ext/graphviz.py
--- dist.orig/sphinx/ext/graphviz.py	2018-11-11 14:47:20.000000000 +0900
+++ dist/sphinx/ext/graphviz.py	2018-11-24 09:36:52.971512778 +0900
@@ -11,6 +11,7 @@
 """
 
 import codecs
+import os
 import posixpath
 import re
 from hashlib import sha1
@@ -246,6 +247,7 @@
     if format == 'png':
         dot_args.extend(['-Tcmapx', '-o%s.map' % outfn])
     try:
+        p = Popen(dot_args, stdout=PIPE, stdin=PIPE, stderr=PIPE, cwd=cwd, env=_new_env())
         p = Popen(dot_args, stdout=PIPE, stdin=PIPE, stderr=PIPE, cwd=cwd)
     except OSError as err:
         if err.errno != ENOENT:   # No such file or directory
@@ -416,6 +418,17 @@
         copy_asset(src, dst)
 
 
+def _new_env():
+    env = dict(os.environ)  # make a copy of the environment
+    lp_key = 'LD_LIBRARY_PATH'  # for Linux and *BSD.
+    lp_orig = env.get(lp_key + '_ORIG')  # pyinstaller >= 20160820 has this
+    if lp_orig is not None:
+        env[lp_key] = lp_orig  # restore the original, unmodified value
+    else:
+        env.pop(lp_key, None)  # last resort: remove the env var
+    return env
+
+
 def setup(app):
     # type: (Sphinx) -> Dict[unicode, Any]
     app.add_node(graphviz,
diff -urN dist.orig/sphinx/ext/imgconverter.py dist/sphinx/ext/imgconverter.py
--- dist.orig/sphinx/ext/imgconverter.py	2018-11-11 14:47:20.000000000 +0900
+++ dist/sphinx/ext/imgconverter.py	2018-11-24 09:37:08.971490704 +0900
@@ -9,6 +9,7 @@
     :license: BSD, see LICENSE for details.
 """
 import locale
+import os
 import subprocess
 
 from sphinx.errors import ExtensionError
@@ -39,7 +40,8 @@
         try:
             args = [self.config.image_converter, '-version']
             logger.debug('Invoking %r ...', args)
-            p = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+            p = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE,
+                                 env=_new_env())
         except (OSError, IOError):
             logger.warning(__('convert command %r cannot be run.'
                               'check the image_converter setting'),
@@ -98,6 +100,17 @@
         return True
 
 
+def _new_env():
+    env = dict(os.environ)  # make a copy of the environment
+    lp_key = 'LD_LIBRARY_PATH'  # for Linux and *BSD.
+    lp_orig = env.get(lp_key + '_ORIG')  # pyinstaller >= 20160820 has this
+    if lp_orig is not None:
+        env[lp_key] = lp_orig  # restore the original, unmodified value
+    else:
+        env.pop(lp_key, None)  # last resort: remove the env var
+    return env
+
+
 def setup(app):
     # type: (Sphinx) -> Dict[unicode, Any]
     app.add_post_transform(ImagemagickConverter)
diff -urN dist.orig/sphinx/ext/imgmath.py dist/sphinx/ext/imgmath.py
--- dist.orig/sphinx/ext/imgmath.py	2018-11-11 14:47:20.000000000 +0900
+++ dist/sphinx/ext/imgmath.py	2018-11-24 09:37:20.711474920 +0900
@@ -11,6 +11,7 @@
 
 import codecs
 import posixpath
+import os
 import re
 import shutil
 import tempfile
@@ -136,7 +137,7 @@
 
     with cd(tempdir):
         try:
-            p = Popen(command, stdout=PIPE, stderr=PIPE)
+            p = Popen(command, stdout=PIPE, stderr=PIPE, env=_new_env())
         except OSError as err:
             if err.errno != ENOENT:   # No such file or directory
                 raise
@@ -156,7 +157,7 @@
     # type: (List[unicode], unicode) -> Tuple[unicode, unicode]
     """Convert DVI file to specific image format."""
     try:
-        p = Popen(command, stdout=PIPE, stderr=PIPE)
+        p = Popen(command, stdout=PIPE, stderr=PIPE, env=_new_env())
     except OSError as err:
         if err.errno != ENOENT:   # No such file or directory
             raise
@@ -345,6 +346,17 @@
     raise nodes.SkipNode
 
 
+def _new_env():
+    env = dict(os.environ)  # make a copy of the environment
+    lp_key = 'LD_LIBRARY_PATH'  # for Linux and *BSD.
+    lp_orig = env.get(lp_key + '_ORIG')  # pyinstaller >= 20160820 has this
+    if lp_orig is not None:
+        env[lp_key] = lp_orig  # restore the original, unmodified value
+    else:
+        env.pop(lp_key, None)  # last resort: remove the env var
+    return env
+
+
 def setup(app):
     # type: (Sphinx) -> Dict[unicode, Any]
     app.add_html_math_renderer('imgmath',
