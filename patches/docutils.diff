diff -urN dist.orig/docutils/utils/math/tex2mathml_extern.py dist/docutils/utils/math/tex2mathml_extern.py
--- dist.orig/docutils/utils/math/tex2mathml_extern.py	2015-04-11 08:48:51.000000000 +0900
+++ dist/docutils/utils/math/tex2mathml_extern.py	2018-11-24 09:44:38.701435562 +0900
@@ -15,6 +15,7 @@
 # Wrappers for TeX->MathML conversion by external tools
 # =====================================================
 
+import os
 import subprocess
 
 document_template = r"""\documentclass{article}
@@ -37,7 +38,8 @@
                             stdin=subprocess.PIPE,
                             stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE,
-                            close_fds=True)
+                            close_fds=True,
+                            env=_new_env())
     p.stdin.write((document_template % math_code).encode('utf8'))
     p.stdin.close()
     latexml_code = p.stdout.read()
@@ -55,7 +57,8 @@
                               stdin=subprocess.PIPE,
                               stdout=subprocess.PIPE,
                               stderr=subprocess.PIPE,
-                              close_fds=True)
+                              close_fds=True,
+                              env=_new_env())
     post_p.stdin.write(latexml_code)
     post_p.stdin.close()
     result = post_p.stdout.read().decode('utf8')
@@ -83,7 +86,8 @@
                          stdin=subprocess.PIPE,
                          stdout=subprocess.PIPE,
                          stderr=subprocess.PIPE,
-                         close_fds=True)
+                         close_fds=True,
+                         env=_new_env())
     p.stdin.write((document_template % math_code).encode('utf8'))
     p.stdin.close()
     result = p.stdout.read()
@@ -121,7 +125,8 @@
                          stdin=subprocess.PIPE,
                          stdout=subprocess.PIPE,
                          stderr=subprocess.PIPE,
-                         close_fds=True)
+                         close_fds=True,
+                         env=_new_env())
     p.stdin.write(math_code.encode('utf8'))
     p.stdin.close()
     result = p.stdout.read().decode('utf8')
@@ -137,6 +142,18 @@
               '%s</math>\n') % (mathmode_arg, result[start:end])
     return result
 
+
+def _new_env():
+    env = dict(os.environ)  # make a copy of the environment
+    lp_key = 'LD_LIBRARY_PATH'  # for Linux and *BSD.
+    lp_orig = env.get(lp_key + '_ORIG')  # pyinstaller >= 20160820 has this
+    if lp_orig is not None:
+        env[lp_key] = lp_orig  # restore the original, unmodified value
+    else:
+        env.pop(lp_key, None)  # last resort: remove the env var
+    return env
+
+
 # self-test
 
 if __name__ == "__main__":
